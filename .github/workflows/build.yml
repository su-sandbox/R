# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}

    name: ${{ matrix.os }} R

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]

    steps:
      - uses: actions/checkout@v3
        with:
          path: R

      - uses: s-u/R-actions/tinytex@v1

      - name: Build
        run: |
          sudo apt-get install -y libcurl4-openssl-dev tk-dev
          cd R 
          tools/rsync-recommended
          cd ..
          mkdir build
          cd build
          ../R/configure 'CFLAGS=-g -O2 -Wall -Wstrict-prototypes' \
            'CXXFLAGS=-g -O2 -Wall' --enable-R-shlib --prefix=/opt/R
          make -j6
          make install rhome=/opt/R/devel DESTDIR=`pwd`/../dst
          cd ../dst
          mkdir -p usr/local/bin
          ln -s /opt/R/bin/R usr/local/bin/R
          ln -s /opt/R/bin/Rscript usr/local/bin/Rscript
          tar fcz ../R-devel-${{ matrix.os }}.tar.gz *
          cd ..
          sudo tar fxz R-devel-${{ matrix.os }}.tar.gz -C /
          R --version
          ## tag the release we'll update
          (cd R && git tag develop && git push -f origin develop)
          ## re-compress
          echo Recompressing tar ball ..
          gzip -dc R-devel-${{ matrix.os }}.tar.gz | xz -c9 > R-devel-${{ matrix.os }}.tar.xz

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: R-devel-${{ matrix.os }}.tar.xz
          name: develop
          tag_name: develop
